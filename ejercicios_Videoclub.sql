--1
SELECT * FROM MOVIES;

--2
SELECT * FROM GENRES;

--3
SELECT * FROM STUDIOS WHERE STUDIO_ACTIVE = 1;

--4
SELECT * FROM MEMBERS ORDER BY  MEMBER_DISCHARGE_DATE DESC LIMIT 20;

--5
SELECT MOVIE_DURATION FROM MOVIES GROUP BY MOVIE_DURATION ORDER BY COUNT(MOVIE_DURATION) DESC LIMIT 20; 

--6
SELECT * FROM MOVIES WHERE (YEAR(MOVIE_LAUNCH_DATE) > 2000) AND (MOVIE_NAME LIKE 'A%');

--7
SELECT * FROM ACTORS WHERE MONTH(ACTOR_BIRTH_DATE) = 6

--8
SELECT * FROM ACTORS WHERE (MONTH(ACTOR_BIRTH_DATE) != 6) AND (ACTOR_DEAD_DATE IS NULL);

--9
SELECT
	DIRECTOR_NAME,
	AGE
FROM
	(
	SELECT
		DIRECTOR_NAME,
		DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()) AS "AGE",
		DIRECTOR_DEAD_DATE
	FROM
		DIRECTORS)
WHERE
	AGE <= 50
	AND DIRECTOR_DEAD_DATE IS NULL;

--10
SELECT
	ACTOR_NAME,
	AGE
FROM
	(
	SELECT
		ACTOR_NAME,
		DATEDIFF(YEAR, ACTOR_BIRTH_DATE, TODAY()) AS "AGE",
		ACTOR_DEAD_DATE
	FROM
		ACTORS)
WHERE
	AGE < 50
	AND ACTOR_DEAD_DATE IS NOT NULL;

--11
SELECT
	DIRECTOR_NAME
FROM
	(
	SELECT
		DIRECTOR_NAME,
		DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()) AS "AGE",
		DIRECTOR_DEAD_DATE
	FROM
		DIRECTORS)
WHERE
	AGE <= 40
	AND DIRECTOR_DEAD_DATE IS NULL;

--12
SELECT
	AVG(DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()))AS "AGE"
FROM
	DIRECTORS
WHERE
	DIRECTOR_DEAD_DATE IS NULL;

--13
SELECT
	AVG(DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, DIRECTOR_DEAD_DATE)) AS "AGE"
FROM
	DIRECTORS
WHERE
	DIRECTOR_DEAD_DATE IS NOT NULL;

--14
SELECT
	M.MOVIE_NAME AS "PELICULA",
	S.STUDIO_NAME AS "ESTUDIO"
FROM
	MOVIES M
INNER JOIN STUDIOS S ON
	M.STUDIO_ID = S.STUDIO_ID;

--15
SELECT
	DISTINCT M.*
FROM
	MEMBERS_MOVIE_RENTAL MR
JOIN MEMBERS M ON
	MR.MEMBER_ID = M.MEMBER_ID
WHERE
	(YEAR(MEMBER_RENTAL_DATE) BETWEEN 2010 AND 2015)
	AND
	(M.MEMBER_ID = MR.MEMBER_ID)
GROUP BY
	M.MEMBER_ID;

--16
SELECT
	COUNT(M.MOVIE_ID) AS "Nº PELICULAS",
	N.NATIONALITY_NAME AS "PAIS"
FROM
	MOVIES M
JOIN NATIONALITIES N
ON
	M.NATIONALITY_ID = N.NATIONALITY_ID
GROUP BY
	"Nº PELIULAS";

--17
SELECT
	*
FROM
	MOVIES
WHERE 
	GENRE_ID = (SELECT GENRE_ID FROM GENRES WHERE GENRE_NAME = 'Documentary') ;
	
--18
SELECT
	M.*
FROM
	MOVIES M
JOIN DIRECTORS D ON
	M.DIRECTOR_ID = D.DIRECTOR_ID
WHERE
	(YEAR(DIRECTOR_BIRTH_DATE) > 1980)
	AND (DIRECTOR_DEAD_DATE IS NULL);
	
--19


--20
SELECT
	(YEAR(M.MOVIE_LAUNCH_DATE)) AS "AÑO",
	M.MOVIE_NAME
FROM
	MOVIES M
JOIN STUDIOS S ON
	M.STUDIO_ID = S.STUDIO_ID
WHERE
	STUDIO_ACTIVE = 0;

--21
SELECT
	MR.MEMBER_RENTAL_DATE, M.*
FROM
	MOVIES M
JOIN MEMBERS_MOVIE_RENTAL MR ON
	M.MOVIE_ID = MR.MOVIE_ID
ORDER BY
	MEMBER_RENTAL_DATE DESC
LIMIT
	10;

--22
SELECT
	COUNT(*) N_PELICULAS,
	DIRECTOR_NAME
FROM
	(
	SELECT
		M.MOVIE_NAME ,
		M.MOVIE_LAUNCH_DATE ,
		D.DIRECTOR_BIRTH_DATE,
		DATEDIFF(YEAR, D.DIRECTOR_BIRTH_DATE, M.MOVIE_LAUNCH_DATE ) YEARS,
		D.DIRECTOR_ID,
		D.DIRECTOR_NAME
	FROM
		MOVIES M
	JOIN DIRECTORS D ON
		D.DIRECTOR_ID = M.DIRECTOR_ID
	WHERE
		DATEDIFF(YEAR, d.DIRECTOR_BIRTH_DATE, m.MOVIE_LAUNCH_DATE ) < 41 ) EDAD_PELICULAS
GROUP BY
	DIRECTOR_ID,
	DIRECTOR_NAME;

--23
SELECT AVG(M.MOVIE_DURATION) AS "DURACION", D.DIRECTOR_NAME AS "DIRECTOR"  FROM MOVIES M JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID GROUP BY D.DIRECTOR_ID;


--24
-- No encuentro la manera de agruparlos por miembro y aún así conservar el nombre de la película.
SELECT  
	MR.MEMBER_ID,
	M.MOVIE_NAME AS "NOMBRE",
	M.MOVIE_DURATION AS "DURACION"	
FROM 
	MOVIES M
JOIN (SELECT * FROM MEMBERS_MOVIE_RENTAL WHERE MEMBER_RENTAL_DATE >= DATEADD( YEAR,
-2,
DATE '2019-01-25')) MR
ON M.MOVIE_ID = MR.MOVIE_ID
;

--25
SELECT
	D.DIRECTOR_NAME,
	COUNT(M.MOVIE_ID)
FROM
	MOVIES M
JOIN DIRECTORS D ON
	D.DIRECTOR_ID = M.DIRECTOR_ID
WHERE
	(YEAR(M.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1980)
	AND (M.MOVIE_NAME LIKE
	'%The%')
GROUP BY
	D.DIRECTOR_NAME ;
	
--26
SELECT
	M.MOVIE_NAME,
	N.NATIONALITY_ID,
	D.DIRECTOR_NAME
FROM
	MOVIES M
JOIN NATIONALITIES N ON
	M.NATIONALITY_ID = N.NATIONALITY_ID
JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID;

--27
SELECT
	M.MOVIE_NAME,
	GROUP_CONCAT(A.ACTOR_NAME SEPARATOR ', ') AS "ACTORES"
FROM
	MOVIES M
JOIN (
	SELECT
		ACTORS.ACTOR_NAME,
		ACTORS.ACTOR_ID,
		MOVIES_ACTORS.MOVIE_ID
	FROM
		MOVIES_ACTORS
	JOIN ACTORS ON
		MOVIES_ACTORS.ACTOR_ID = ACTORS.ACTOR_ID) A
	ON M.MOVIE_ID = A.MOVIE_ID
	GROUP BY A.MOVIE_NAME;
	
--28
 SELECT
	D.DIRECTOR_NAME
FROM
	DIRECTORS D
JOIN
	MOVIES M
ON D.DIRECTOR_ID = M.DIRECTOR_ID 
JOIN MEMBERS_MOVIE_RENTAL MR
ON M.MOVIE_ID = MR.MOVIE_ID 
GROUP BY D.DIRECTOR_NAME
ORDER BY COUNT(D.DIRECTOR_NAME) DESC
LIMIT 1;

--29
SELECT 
	S.STUDIO_NAME,	
	SUM(A.AWARD_WIN) AS "PREMIOS"
FROM 
	STUDIOS S
JOIN
	MOVIES M
	ON
	S.STUDIO_ID = M.STUDIO_ID
	JOIN 
	AWARDS A
	ON
	M.MOVIE_ID = A.MOVIE_ID	
GROUP BY
	S.STUDIO_NAME;

--30
SELECT	
	A.ACTOR_NAME AS "ACTOR",
	SUM(P.PREMIOS) AS "PREMIOS NO CONSEGUIDOS"
FROM
	(
	SELECT
		M.MOVIE_ID AS "MOVIE_ID",
		SUM(AW.AWARD_NOMINATION)-SUM(AW.AWARD_WIN) AS "PREMIOS"
	FROM
		MOVIES M
	JOIN
	AWARDS AW
	ON
		M.MOVIE_ID = AW.MOVIE_ID
	GROUP BY
		M.MOVIE_ID) P
JOIN
(
	SELECT
		A.ACTOR_NAME AS "ACTOR_NAME",
		A.ACTOR_ID AS "ACTOR_ID",
		MA.MOVIE_ID AS "MOVIE_ID"
	FROM
		ACTORS A
	JOIN MOVIES_ACTORS MA 
ON
		A.ACTOR_ID = MA.ACTOR_ID) A
ON P.MOVIE_ID = A.MOVIE_ID
GROUP BY A.ACTOR_NAME

--31
SELECT
	GROUP_CONCAT(A.ACTOR_NAME SEPARATOR ', ') AS "ACTORES",	
	GROUP_CONCAT(D.DIRECTOR_NAME SEPARATOR ', ') AS "DIRECTORES",	
	S.STUDIO_NAME
FROM
	MOVIES M
JOIN
	(
	SELECT
		A.ACTOR_NAME AS "ACTOR_NAME",
		A.ACTOR_ID AS "ACTOR_ID",
		MA.MOVIE_ID AS "MOVIE_ID"
	FROM
		ACTORS A
	JOIN MOVIES_ACTORS MA 
	ON
		A.ACTOR_ID = MA.ACTOR_ID) A	
ON
	A.MOVIE_ID = M.MOVIE_ID 
JOIN 
	STUDIOS S
ON 
 	M.STUDIO_ID = S.STUDIO_ID 
JOIN
	DIRECTORS D
ON 
	D.DIRECTOR_ID = M.MOVIE_ID
GROUP BY S.STUDIO_NAME;

--32
SELECT
	M.MEMBER_NAME,
	M.MEMBER_TOWN,
	M.MEMBER_PHONE
FROM
	(
	SELECT
		MR.MOVIE_ID AS "MOVIE_ID",
		M.MEMBER_ID AS "MEMBER_ID",
		M.MEMBER_NAME AS "MEMBER_NAME",
		M.MEMBER_TOWN AS "MEMBER_TOWN",
		M.MEMBER_PHONE AS "MEMBER_PHONE"
	FROM
		MEMBERS M
	JOIN
		MEMBERS_MOVIE_RENTAL MR
	ON
		M.MEMBER_ID = MR.MEMBER_ID) M	
JOIN
	(
	SELECT
		M.MOVIE_ID AS "MOVIE_ID",
		SUM(AW.AWARD_NOMINATION) AS "AWARD_NOMINATION",
		SUM(AW.AWARD_WIN) AS "AWARD_WIN"
	FROM
		MOVIES M
	JOIN
	AWARDS AW
	ON
		M.MOVIE_ID = AW.MOVIE_ID
	GROUP BY
		M.MOVIE_ID) P
ON 
	M.MOVIE_ID = P.MOVIE_ID
WHERE (P.AWARD_NOMINATION > 150) AND (P.AWARD_WIN < 50);

--33
SELECT
	*
FROM
	MOVIES M
JOIN 
	DIRECTORS D
ON 
	M.DIRECTOR_ID = D.DIRECTOR_ID
WHERE
	(D.DIRECTOR_BIRTH_DATE > M.MOVIE_LAUNCH_DATE)
	OR (D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE);
	
--34
--Da el siguente error: "SQL Error [42501]: usuario no tiene privilegios suficientes o objeto no encontrado: MOVIE_LAUNCH_DATE"
UPDATE
	DIRECTORS
SET
	DIRECTOR_DEAD_DATE = DATEADD(YEAR,
	1,
	MOVIE_LAUNCH_DATE)
FROM
	DIRECTORS
INNER JOIN MOVIES ON
	DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
WHERE
	DIRECTORS.DIRECTOR_DEAD_DATE < MOVIES.MOVIE_LAUNCH_DATE;
